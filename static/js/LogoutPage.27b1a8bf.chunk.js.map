{"version":3,"file":"static/js/LogoutPage.27b1a8bf.chunk.js","mappings":"sMAwBA,UAnBe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MAgBjB,OAPAC,EAAAA,EAAAA,YAAU,WAAM,8CACd,mGACQF,GAASG,EAAAA,EAAAA,MADjB,4CADc,uBAAC,WAAD,wBAIdC,KACC,KAEI,0B,mJCjBIC,EAAQ,SAACC,GAAD,gDAAoB,WAAON,GAAP,qFACvCA,EAAS,CACPO,KAAMC,EAAAA,GACNC,QAAS,CAAEC,SAAS,KAHiB,SAKpBC,EAAAA,GAAkBL,GALE,QAOlB,KAFfM,EALiC,QAO9BC,SACDC,EAAY,CAChBC,QAASH,EAAKI,OAAOC,MACrBP,SAAS,EACTQ,YAAY,GAEdC,EAAAA,EAAAA,IAAiB,OAAQL,GACzBd,EAAS,CACPO,KAAMC,EAAAA,GACNC,QAASG,EAAKI,OAAOC,QAEvBG,EAAAA,EAAAA,KAAa,MAEbpB,EAAS,CACPO,KAAMC,EAAAA,GACNC,QAASG,IAtB0B,2CAApB,uDA2BRS,EAAS,2DAAM,WAAOrB,GAAP,sEAC1BW,EAAAA,KACAX,EAAS,CACPO,KAAMC,EAAAA,KAERY,EAAAA,EAAAA,KAAa,UALa,2CAAN","sources":["pages/Logout.jsx","redux/auth/actions.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { Button, Result } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { logout as logoutAction } from \"@/redux/auth/actions\";\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  // const callbackLogout = useCallback(async () => {\n  //   await dispatch(logoutAction());\n  // }, []);\n\n  // useEffect(() => {\n  //   callbackLogout();\n  // }, []);\n\n  useEffect(() => {\n    async function asyncLogout() {\n      await dispatch(logoutAction());\n    }\n    asyncLogout();\n  }, []);\n\n  return <></>;\n};\nexport default Logout;\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n"],"names":["dispatch","useDispatch","useEffect","logoutAction","asyncLogout","login","loginAdminData","type","actionTypes","payload","loading","authService","data","success","authValue","current","result","admin","isLoggedIn","storePersist","history","logout"],"sourceRoot":""}