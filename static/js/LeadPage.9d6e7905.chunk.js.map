{"version":3,"file":"static/js/LeadPage.9d6e7905.chunk.js","mappings":"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","sources":["components/DataTable/index.jsx","modules/CrudModule/CrudDataTable.jsx","modules/CrudModule/index.jsx","components/CustomAntd/DatePicker.jsx","components/CustomAntd/Calendar.jsx","components/CustomAntd/TimePicker.jsx","forms/LeadForm.jsx","pages/Lead.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uinqueId\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport DataTable from \"@/components/DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport CrudDataTable from \"./CrudDataTable\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default function CrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n","import dayjsGenerateConfig from \"rc-picker/lib/generate/dayjs\";\nimport generatePicker from \"antd/lib/date-picker/generatePicker\";\nimport \"antd/lib/date-picker/style/index\";\n\nconst DatePicker = generatePicker(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import dayjsGenerateConfig from \"rc-picker/lib/generate/dayjs\";\nimport generateCalendar from \"antd/lib/calendar/generateCalendar\";\nimport \"antd/lib/calendar/style\";\n\nconst Calendar = generateCalendar(dayjsGenerateConfig);\n\nexport default Calendar;\n","import * as React from \"react\";\nimport DatePicker from \"./DatePicker\";\n\nconst TimePicker = React.forwardRef((props, ref) => {\n  return <DatePicker {...props} picker=\"time\" mode={undefined} ref={ref} />;\n});\n\nTimePicker.displayName = \"TimePicker\";\n\nexport default TimePicker;\n","import React from \"react\";\nimport { Form, Input } from \"antd\";\nimport { DatePicker } from \"@/components/CustomAntd\";\n\nexport default function LeadForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        label=\"Client\"\n        name=\"client\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your client name!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your phone!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Date\"\n        name=\"date\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input date!\",\n          },\n        ]}\n      >\n        <DatePicker format={\"DD/MM/YYYY\"} />\n      </Form.Item>\n      <Form.Item\n        label=\"Budget\"\n        name=\"budget\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your budget!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"request\"\n        name=\"request\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport CrudModule from \"@/modules/CrudModule\";\nimport LeadForm from \"@/forms/LeadForm\";\n\nfunction Lead() {\n  const entity = \"lead\";\n  const searchConfig = {\n    displayLabels: [\"client\"],\n    searchFields: \"client,email,phone\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"Lead Panel\";\n  const dataTableTitle = \"Leads Lists\";\n  const entityDisplayLabels = [\"client\"];\n\n  const readColumns = [\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n    },\n    {\n      title: \"Client\",\n      dataIndex: \"client\",\n    },\n    {\n      title: \"phone\",\n      dataIndex: \"phone\",\n    },\n    {\n      title: \"email\",\n      dataIndex: \"email\",\n    },\n\n    {\n      title: \"Budget\",\n      dataIndex: \"budget\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n    },\n    {\n      title: \"Request\",\n      dataIndex: \"request\",\n    },\n  ];\n  const dataTableColumns = [\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n    },\n    {\n      title: \"Client\",\n      dataIndex: \"client\",\n    },\n    {\n      title: \"phone\",\n      dataIndex: \"phone\",\n    },\n\n    {\n      title: \"Budget\",\n      dataIndex: \"budget\",\n    },\n  ];\n\n  const ADD_NEW_ENTITY = \"Add new lead\";\n  const DATATABLE_TITLE = \"leads List\";\n  const ENTITY_NAME = \"lead\";\n  const CREATE_ENTITY = \"Create lead\";\n  const UPDATE_ENTITY = \"Update lead\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CrudModule\n      createForm={<LeadForm />}\n      updateForm={<LeadForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n\nexport default Lead;\n"],"names":["DataTable","config","DropDownRowMenu","AddNewItem","entity","dataTableColumns","dataTableTitle","title","render","row","overlay","trigger","style","cursor","fontSize","useSelector","selectListItems","listResult","result","listIsLoading","isLoading","pagination","items","dispatch","useDispatch","handelDataTableLoad","useCallback","crud","current","useEffect","onBack","window","history","back","ghost","extra","onClick","uniqueId","padding","columns","rowKey","item","_id","dataSource","loading","onChange","crudContextAction","useCrudContext","collapsedBox","panel","ADD_NEW_ENTITY","open","close","type","modal","readBox","editBox","selectItemById","width","icon","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","formElements","ReadItem","UpdateForm","FixHeaderPanel","className","gutter","span","marginBottom","panelTitle","SearchItem","block","PlusOutlined","CrudModule","createForm","updateForm","useLayoutEffect","fixHeaderPanel","sidePanelBottomContent","CreateForm","sidePanelTopContent","DeleteModal","generatePicker","dayjsGenerateConfig","generateCalendar","TimePicker","React","props","ref","picker","mode","undefined","displayName","LeadForm","isUpdateForm","label","name","rules","required","message","format","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE","readColumns","dataIndex","searchConfig","displayLabels","searchFields","outputValue","entityDisplayLabels"],"sourceRoot":""}