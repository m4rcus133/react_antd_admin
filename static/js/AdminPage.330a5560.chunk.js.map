{"version":3,"file":"static/js/AdminPage.330a5560.chunk.js","mappings":"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","sources":["components/DataTable/index.jsx","modules/AdminCrudModule/AdminDataTable.jsx","modules/AdminCrudModule/UpdatePassword.jsx","hooks/useOnFetch/index.jsx","modules/AdminCrudModule/index.jsx","forms/AdminForm.jsx","pages/Admin.jsx","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uinqueId\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport {\n  EyeOutlined,\n  EditOutlined,\n  LockOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport DataTable from \"@/components/DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const {\n    panel,\n    collapsedBox,\n    modal,\n    advancedBox,\n    readBox,\n    editBox,\n  } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function UpdatePassword() {\n    dispatch(crud.currentAction(\"update\", item));\n    advancedBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ minWidth: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<LockOutlined />}\n        onClick={UpdatePassword}\n      >\n        Update Password\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function AdminCrudModule({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form, Input } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport Loading from \"@/components/Loading\";\nimport useOnFetch from \"@/hooks/useOnFetch\";\nimport { request } from \"@/request\";\n\nexport default function UpdatePassword({ config }) {\n  const dispatch = useDispatch();\n  const { current } = useSelector(selectUpdatedItem);\n\n  const { state } = useCrudContext();\n\n  const [form] = Form.useForm();\n\n  const { onFetch, result, isLoading, isSuccess } = useOnFetch();\n\n  const handelSubmit = (fieldsValue) => {\n    const id = current._id;\n    const updateFn = () => {\n      return request.patch(\"admin/password-update/\" + id, fieldsValue);\n    };\n    onFetch(updateFn);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      // readBox.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n    }\n  }, [isSuccess]);\n\n  const { isAdvancedBoxOpen } = state;\n\n  const show = isAdvancedBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <h3>Update Password</h3>\n        <div className=\"space\"></div>\n        <Form form={form} layout=\"vertical\" onFinish={handelSubmit}>\n          <Form.Item\n            label=\"New Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n                len: 8,\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              autoComplete=\"off\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Update\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useOnFetch() {\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onFetch = async (fetchingFn) => {\n    setIsLoading(true);\n\n    const data = await fetchingFn();\n    if (data.success === true) {\n      setIsSuccess(true);\n      setResult(data.result);\n    }\n    setIsLoading(false);\n  };\n\n  return { onFetch, result, isSuccess, isLoading };\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport AdminDataTable from \"./AdminDataTable\";\nimport UpdatePassword from \"./UpdatePassword\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n      <UpdatePassword config={config} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AdminCrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <AdminDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default AdminCrudModule;\n","import React from \"react\";\nimport { Form, Input, Select } from \"antd\";\n\nexport default function AdminForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\",\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      {!isUpdateForm && (\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Password!\",\n            },\n          ]}\n        >\n          <Input type=\"password\" autoComplete=\"off\" />\n        </Form.Item>\n      )}\n\n      <Form.Item\n        label=\"name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      <Form.Item\n        label=\"surname\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport AdminCrudModule from \"@/modules/AdminCrudModule\";\nimport AdminForm from \"@/forms/AdminForm\";\n\nexport default function Admin() {\n  const entity = \"admin\";\n  const searchConfig = {\n    displayLabels: [\"name\", \"surname\"],\n    searchFields: \"email,name,surname\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"Admin Panel\";\n  const dataTableTitle = \"Admin Lists\";\n  const entityDisplayLabels = [\"email\"];\n\n  const readColumns = [\n    { title: \"Name\", dataIndex: \"name\" },\n    { title: \"Surname\", dataIndex: \"surname\" },\n    { title: \"Email\", dataIndex: \"email\" },\n  ];\n\n  const dataTableColumns = [\n    { title: \"Name\", dataIndex: \"name\" },\n    { title: \"Surname\", dataIndex: \"surname\" },\n    { title: \"Email\", dataIndex: \"email\" },\n  ];\n  const ADD_NEW_ENTITY = \"Add new admin\";\n  const DATATABLE_TITLE = \"Admins List\";\n  const ENTITY_NAME = \"admin\";\n  const CREATE_ENTITY = \"Create admin\";\n  const UPDATE_ENTITY = \"Update admin\";\n\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <AdminCrudModule\n      createForm={<AdminForm />}\n      updateForm={<AdminForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);"],"names":["DataTable","config","DropDownRowMenu","AddNewItem","entity","dataTableColumns","dataTableTitle","title","render","row","overlay","trigger","style","cursor","fontSize","useSelector","selectListItems","listResult","result","listIsLoading","isLoading","pagination","items","dispatch","useDispatch","handelDataTableLoad","useCallback","crud","current","useEffect","onBack","window","history","back","ghost","extra","onClick","uniqueId","padding","columns","rowKey","item","_id","dataSource","loading","onChange","crudContextAction","useCrudContext","collapsedBox","panel","ADD_NEW_ENTITY","open","close","type","modal","advancedBox","readBox","editBox","selectItemById","minWidth","icon","EyeOutlined","EditOutlined","LockOutlined","DeleteOutlined","AdminCrudModule","UpdatePassword","selectUpdatedItem","state","Form","form","useState","setResult","isSuccess","setIsSuccess","setIsLoading","onFetch","fetchingFn","data","success","useOnFetch","resetFields","show","isAdvancedBoxOpen","display","opacity","Loading","className","layout","onFinish","fieldsValue","id","request","label","name","rules","required","message","len","prefix","autoComplete","htmlType","SidePanelTopContent","formElements","ReadItem","UpdateForm","FixHeaderPanel","gutter","span","marginBottom","panelTitle","SearchItem","block","PlusOutlined","createForm","updateForm","useLayoutEffect","fixHeaderPanel","sidePanelBottomContent","CreateForm","sidePanelTopContent","DeleteModal","AdminForm","isUpdateForm","Admin","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE","readColumns","dataIndex","searchConfig","displayLabels","searchFields","outputValue","entityDisplayLabels","props","ref","React","AntdIcon","_objectSpread","LockOutlinedSvg","displayName"],"sourceRoot":""}